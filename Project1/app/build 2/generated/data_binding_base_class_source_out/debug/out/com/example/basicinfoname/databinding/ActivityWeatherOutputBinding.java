// Generated by view binder compiler. Do not edit!
package com.example.basicinfoname.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.basicinfoname.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWeatherOutputBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatButton buttonReturn;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final TextView tvChanceOfRain;

  @NonNull
  public final TextView tvChanceOfRainVal;

  @NonNull
  public final TextView tvLoc;

  @NonNull
  public final TextView tvLocVal;

  @NonNull
  public final TextView tvTemp;

  @NonNull
  public final TextView tvTempVal;

  private ActivityWeatherOutputBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatButton buttonReturn, @NonNull LinearLayout linearLayout1,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull LinearLayout linearLayout4, @NonNull TextView tvChanceOfRain,
      @NonNull TextView tvChanceOfRainVal, @NonNull TextView tvLoc, @NonNull TextView tvLocVal,
      @NonNull TextView tvTemp, @NonNull TextView tvTempVal) {
    this.rootView = rootView;
    this.buttonReturn = buttonReturn;
    this.linearLayout1 = linearLayout1;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
    this.tvChanceOfRain = tvChanceOfRain;
    this.tvChanceOfRainVal = tvChanceOfRainVal;
    this.tvLoc = tvLoc;
    this.tvLocVal = tvLocVal;
    this.tvTemp = tvTemp;
    this.tvTempVal = tvTempVal;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWeatherOutputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWeatherOutputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_weather_output, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWeatherOutputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_return;
      AppCompatButton buttonReturn = ViewBindings.findChildViewById(rootView, id);
      if (buttonReturn == null) {
        break missingId;
      }

      id = R.id.linearLayout1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.tv_chance_of_rain;
      TextView tvChanceOfRain = ViewBindings.findChildViewById(rootView, id);
      if (tvChanceOfRain == null) {
        break missingId;
      }

      id = R.id.tv_chance_of_rain_val;
      TextView tvChanceOfRainVal = ViewBindings.findChildViewById(rootView, id);
      if (tvChanceOfRainVal == null) {
        break missingId;
      }

      id = R.id.tv_loc;
      TextView tvLoc = ViewBindings.findChildViewById(rootView, id);
      if (tvLoc == null) {
        break missingId;
      }

      id = R.id.tv_loc_val;
      TextView tvLocVal = ViewBindings.findChildViewById(rootView, id);
      if (tvLocVal == null) {
        break missingId;
      }

      id = R.id.tv_temp;
      TextView tvTemp = ViewBindings.findChildViewById(rootView, id);
      if (tvTemp == null) {
        break missingId;
      }

      id = R.id.tv_temp_val;
      TextView tvTempVal = ViewBindings.findChildViewById(rootView, id);
      if (tvTempVal == null) {
        break missingId;
      }

      return new ActivityWeatherOutputBinding((RelativeLayout) rootView, buttonReturn,
          linearLayout1, linearLayout2, linearLayout3, linearLayout4, tvChanceOfRain,
          tvChanceOfRainVal, tvLoc, tvLocVal, tvTemp, tvTempVal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
